{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/library/modules/_has.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/core-js/library/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/library/modules/es6.string.iterator.js","webpack:///./node_modules/core-js/library/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/core-js/library/modules/es6.array.is-array.js","webpack:///./node_modules/core-js/library/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/library/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_defined.js","webpack:///./node_modules/core-js/modules/_object-gops.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_fails.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_html.js","webpack:///./node_modules/core-js/library/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/core-js/library/modules/_hide.js","webpack:///./node_modules/core-js/library/modules/_to-iobject.js","webpack:///./node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/library/fn/object/define-property.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/library/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/library/modules/es6.object.define-property.js","webpack:///./node_modules/core-js/library/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/core-js/library/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_wks.js","webpack:///./node_modules/core-js/modules/_object-pie.js","webpack:///./node_modules/core-js/library/modules/_object-gpo.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./node_modules/core-js/library/fn/is-iterable.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/library/modules/_shared-key.js","webpack:///./node_modules/core-js/library/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/library/modules/_uid.js","webpack:///./node_modules/core-js/library/modules/_export.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/library/modules/_cof.js","webpack:///./node_modules/core-js/library/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/_string-at.js","webpack:///./node_modules/core-js/modules/_object-assign.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/from.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/library/modules/_ie8-dom-define.js","webpack:///./node_modules/core-js/library/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/core-js/library/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/library/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_iter-create.js","webpack:///./node_modules/core-js/library/modules/_is-array.js","webpack:///./node_modules/core-js/library/modules/_redefine.js","webpack:///./node_modules/core-js/library/modules/core.is-iterable.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/library/modules/_object-create.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/library/modules/_property-desc.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/core-js/library/modules/_to-length.js","webpack:///./node_modules/core-js/library/modules/_library.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/snapsvg/dist/snap.svg.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/library/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/library/modules/_object-keys.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/is-iterable.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/library/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/library/modules/_object-dp.js","webpack:///./node_modules/core-js/library/modules/_shared.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/library/modules/_an-object.js","webpack:///./node_modules/core-js/library/modules/_global.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/core-js/library/modules/_object-keys-internal.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/core-js/library/fn/array/is-array.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/core-js/modules/es6.object.assign.js","webpack:///./node_modules/core-js/library/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_function-to-string.js","webpack:///./node_modules/core-js/modules/_html.js"],"names":["LIBRARY","__webpack_require__","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","this","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","entries","call","Object","name","values","P","F","hasOwnProperty","it","core","global","speciesConstructor","promiseResolve","R","finally","onFinally","C","Promise","isFunction","then","x","e","$keys","enumBugKeys","O","toInteger","max","Math","min","index","length","dP","anObject","getKeys","defineProperties","Properties","i","f","$at","String","iterated","_t","_i","point","value","done","split","defer","channel","port","ctx","invoke","html","cel","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","id","fn","listener","event","data","args","arguments","push","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","set","clear","S","isArray","isObject","val","toString","valueOf","TypeError","document","is","createElement","iterator","ret","$defineProperty","createDesc","object","cof","ARG","tryGet","T","B","callee","defined","getOwnPropertySymbols","classof","getIteratorMethod","exec","has","SRC","$toString","TO_STRING","TPL","inspectSource","safe","join","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","src","contentWindow","open","write","close","create","result","store","uid","Symbol","USE_SYMBOL","$exports","slice","that","un","apply","documentElement","propertyIsEnumerable","ArrayProto","Array","IObject","toObject","ObjectProto","constructor","ceil","floor","isNaN","descriptor","$Object","desc","defineProperty","def","tag","stat","configurable","bitmap","enumerable","writable","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","step","iterFn","SAFE_CLOSING","riter","from","skipClosing","arr","iter","createProperty","arrayLike","aLen","mapfn","mapping","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","task","microtask","newPromiseCapabilityModule","perform","userAgent","PROMISE","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","resolve","FakePromise","PromiseRejectionEvent","indexOf","isThenable","notify","isReject","_n","chain","_c","_v","ok","_s","reaction","exited","handler","fail","reject","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","console","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","v","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","err","onFulfilled","onRejected","catch","G","W","r","capability","$$reject","all","remaining","$index","alreadyCalled","race","SHARED","version","mode","copyright","shared","__e","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","type","source","own","out","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","target","expProto","U","$parseInt","parseInt","$trim","trim","ws","hex","str","radix","string","test","px","random","concat","IS_WRAP","a","b","c","virtual","TO_STRING_TAG","DOMIterables","Collection","pos","s","l","charCodeAt","charAt","gOPS","pIE","$assign","assign","A","K","forEach","k","getSymbols","isEnum","j","_arrayWithoutHoles","is_array_default","arr2","_iterableToArray","is_iterable_default","from_default","_nonIterableSpread","_toConsumableArray","d","__webpack_exports__","window","self","__g","get","DESCRIPTORS","SPECIES","KEY","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","navigator","standalone","toggle","node","createTextNode","observe","characterData","IE8_DOM_DEFINE","toPrimitive","Attributes","arg","isIterable","UNSCOPABLES","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","ALIAS","FORCE","TYPE","replace","PromiseCapability","$$resolve","$iterators","wks","ArrayValues","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","_createClass","_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__","_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default","n","_defineProperties","props","protoProps","staticProps","promiseCapability","__WEBPACK_LOCAL_MODULE_0__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","separator","comaseparator","wildcard","numsort","events","firstDefined","ii","lastDefined","objtos","Str","ar","eve","scope","oldstop","listeners","z","indexed","ce","zIndex","sort","_events","item","items","jj","nes","names","es","sep","on","exist","attrs","nt","subname","cur","nts","off","unbind","splice","inodes","unshift","funcs","prune","once","f2","factory","mina","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","idgen","idprefix","ID","timer","sta","ds","dur","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","end","easing","timeStamp","len","anim","linear","status","time","getById","easeout","pow","easein","easeinout","q","Q","sqrt","X","abs","y","Y","t","backin","backout","elastic","sin","PI","bounce","p","Snap","root","w","h","nodeType","wrap","Element","doc","querySelector","Paper","_","win","toFloat","parseFloat","toInt","math","mmax","mmin","E","round","objectToString","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","xlink","xmlns","hub","url","$","attr","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","clone","obj","repush","array","cacher","postprocessor","newf","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","atan2","rad","deg","format","tokenRegex","objNotationRegex","replacer","quote","quotedName","isFunc","tan","cos","asin","num","acos","atan","len2","closestPoint","path","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","tolerance","rem","getRGB","colour","g","rgbtoString","toHex","red","green","blue","opacity","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","H","V","L","M","m","parsePathString","pathString","pth","paramCounts","u","params","parseTransformString","TString","svgTransform2string","tstr","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","width","height","scale","add","rgTransform","_unit2px","unit2px","contains","compareDocumentPosition","getSomeDefs","ownerSVGElement","parentNode","select","pdefs","defs","make","getSomeSVG","svg","mgr","getW","getBBox","getH","nam","class","fill","add2group","list","children","childNodes","snap","paper","tagName","nodeName","anims","transform","mask","pattern","symbol","method","Fragment","frag","ownerDocument","body","dom","contentDocument","jsonFiller","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","lastIndexOf","css","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","overflow","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","toUpperCase","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","getBoundingClientRect","docElem","clientTop","clientLeft","top","pageYOffset","scrollTop","left","pageXOffset","scrollLeft","getElementByPoint","canvas","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","isWithoutTransform","getClientRects","removed","localMatrix","original","href","getElementById","pathfinder","deflt","bboxwt","realPath","matrix","map","propString","extractTransform","doReturn","fixids","els","ids","uses","urltest","linktest","oldid","old","fs","papa","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","toDefs","toPattern","patternUnits","viewBox","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","to","Animation","animation","inAnim","_attrs","_callback","curStatus","animate","setter","eq","fkeys","tkeys","equal","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","reURLValue","URL","fillStroke","grad","gradient","deurl","clipIt","gradrg","setFontSize","fontSize","textExtract","chi","getFontSize","tokens","stops","seed","toAbsolute","txt","className","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","getter","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","getUnit","unit","plus","evnt","atr","aUnit","op","bplus","rect","circle","preload","onerror","img","cssText","onload","image","preserveAspectRatio","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","stopOffset","GgetBBox","GsetStops","addStop","gradientLinear","gradientRadial","gradientUnits","setStops","fx","fy","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","onlystart","path2curve","sp","subpaths","getSubpathsAtLength","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","py","px2","py2","interHelper","bez1","bez2","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","getPath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","each","begin","cb","callbacker","bind","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","equaliseTransform","tt1","tt2","maxlength","path2array","getViewBox","getColour","isNumeric","arrayEqual","arr1","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","element","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","saveColor","colors","A100","A200","A400","A700","mui","flat","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","addToUnscopables","_k","Arguments","arrayIndexOf","_classCallCheck","instance","D","forbiddenField"],"mappings":"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","file":"js/chunk-vendors.b7ad8401.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)\nvar $export = require('./_export');\n\n$export($export.S, 'Array', { isArray: require('./_is-array') });\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","exports.f = Object.getOwnPropertySymbols;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc) {\n  return $Object.defineProperty(it, key, desc);\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperty: require('./_object-dp').f });\n","module.exports = {};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","exports.f = {}.propertyIsEnumerable;\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.is-iterable');\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","import _Array$isArray from \"../../core-js/array/is-array\";\nexport default function _arrayWithoutHoles(arr) {\n  if (_Array$isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","import _Array$from from \"../../core-js/array/from\";\nimport _isIterable from \"../../core-js/is-iterable\";\nexport default function _iterableToArray(iter) {\n  if (_isIterable(Object(iter)) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return _Array$from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = require(\"core-js/library/fn/array/from\");","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var core = module.exports = { version: '2.6.5' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function () { /* empty */ };\n","module.exports = {};\n","module.exports = require(\"core-js/library/fn/object/define-property\");","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","module.exports = require('./_hide');\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').isIterable = function (it) {\n  var O = Object(it);\n  return O[ITERATOR] !== undefined\n    || '@@iterator' in O\n    // eslint-disable-next-line no-prototype-builtins\n    || Iterators.hasOwnProperty(classof(O));\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","module.exports = require(\"core-js/library/fn/array/is-array\");","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","module.exports = true;\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","/*** IMPORTS FROM imports-loader ***/\n(function() {\nvar fix = module.exports=0;\n\n// Snap.svg 0.5.0\n//\n// Copyright (c) 2013 – 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// build: 2017-02-06\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.0\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        fun = function () {},\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        };\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     > Arguments\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var e = events,\n                oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                f = false,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event,\n                errors = [];\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n        // Undocumented. Debug only.\n        eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     > Arguments\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment. \n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     > Arguments\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     > Arguments\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     > Arguments\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    (typeof module != \"undefined\" && module.exports) ? (module.exports = eve) : (typeof define === \"function\" && define.amd ? (define(\"eve\", [], function() { return eve; })) : (glob.eve = eve));\n})(this);\n\n(function (glob, factory) {\n    // AMD support\n    if (typeof define == \"function\" && define.amd) {\n        // Define as an anonymous module\n        define([\"eve\"], function (eve) {\n            return factory(glob, eve);\n        });\n    } else if (typeof exports != \"undefined\") {\n        // Next for Node.js or CommonJS\n        var eve = require(\"eve\");\n        module.exports = factory(glob, eve);\n    } else {\n        // Browser globals (glob is window)\n        // Snap adds itself to window\n        factory(glob, glob.eve);\n    }\n}(window || this, function (window, eve) {\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            // try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            // } catch (e) {\n                // return null;\n            // }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nreturn Snap;\n}));\n}.call(window));","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","module.exports = require(\"core-js/library/fn/is-iterable\");","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = require(\"core-js/library/fn/parse-int\");","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","require('../../modules/es6.array.is-array');\nmodule.exports = require('../../modules/_core').Array.isArray;\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = require('./_shared')('native-function-to-string', Function.toString);\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n"],"sourceRoot":""}